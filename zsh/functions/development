#!/bin/env zsh

function project_name() {
  name=$(pwd | sed -n 's:\(^.*/[^/]*/[^/]*\).*$:\1:p' | tr -d '.' | awk -F/ '{print $(NF-1) "/" $(NF)}' | tr '/' '-')
  if [ -z "$name" ]; then
    name='default'
  fi

  echo "$name"
}

function _docker_backend_service() {
  docker compose config --services 2>/dev/null | grep -E '(dev|backend)'  | tr '\n' ' ' | sed 's/ $//'
}

function dev() {
  local target_dir="${HOME}/Development"

  if [[ $# -eq 1 ]]; then
    target_dir="${HOME}/Development/$1"
  fi

  if [[ $# -eq 2 ]]; then
    target_dir="${HOME}/Development/$1/$2"
  fi

  if [[ "$PWD" == "$target_dir" ]]; then
    return
  fi

  cd "$target_dir"
}

function dotfiles() {
  cd ~/.dotfiles
}

function drush() {
  docker compose  -p $(project_name) exec $(_docker_backend_service) ./vendor/bin/drush "$@"
}

function docker-as-drupal() {
 local service=$(_docker_backend_service)

  if [[ $# -ne 0 && ( "$1" == "behat" || "$1" == "phpunit" ) ]]; then
    service="test"
  fi

  docker compose  -p $(project_name) exec $service docker-as-drupal "$@"
}

function docker-as-wordpress() {
  docker compose  -p $(project_name) exec $(_docker_backend_service) docker-as-wordpress "$@"
}

function wp() {
  docker compose  -p $(project_name) exec $(_docker_backend_service) wp "$@"
}

function php-cs-fixer() {
  if [[ -d "tools/php-cs-fixer" ]]; then
    (
      cd tools/php-cs-fixer
      composer install
    )

    if [[ $# -eq 0 ]] || [[ $# -eq 1 && "$1" == "check" ]]; then
      ./tools/php-cs-fixer/vendor/bin/php-cs-fixer check --config=.php-cs-fixer.php --using-cache=no
    elif [[ $# -eq 1 && "$1" == "fix" ]]; then
      ./tools/php-cs-fixer/vendor/bin/php-cs-fixer fix --config=.php-cs-fixer.php --using-cache=no
    else
      ./tools/php-cs-fixer/vendor/bin/php-cs-fixer "$@"
    fi

    return
  fi

  echo "./tools/php-cs-fixer do not exist"
}

function phpcs() {
  if [[ -f ./vendor/bin/phpcs ]]; then
    ./vendor/bin/phpcs "$@"
    return
  fi

  echo "./vendor/bin/phpcs do not exist"
}

function phpcbf() {
  if [[ -f ./vendor/bin/phpcbf ]]; then
    ./vendor/bin/phpcbf "$@"
    return
  fi

  echo "./vendor/bin/phpcbf do not exist"
}

function psalm() {
  if [[ -d "tools/psalm" ]]; then
    (
      cd tools/psalm
      composer install
    )

    if [[ $# -eq 0 ]]; then
      ./tools/psalm/vendor/bin/psalm --config=psalm.xml --no-cache
    elif [[ $# -eq 1 && "$1" == "--alter" ]]; then
      ./tools/psalm/vendor/bin/psalm --config=psalm.xml --no-cache --alter --issues=all
    else
      ./tools/psalm/vendor/bin/psalm "$@"
    fi
    return
  fi

  echo "./tools/psalm do not exis"
}
